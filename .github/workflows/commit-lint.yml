name: Commit Lint

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile

    - name: Validate commit messages
      shell: bash
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: |
        export LANG=en_US.UTF-8
        export LC_ALL=en_US.UTF-8
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # 对于PR，检查所有提交的commit消息
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose --config scripts/commit-lint.config.js
        else
          # 对于push，检查最近的commit
          npx commitlint --from HEAD~1 --to HEAD --verbose --config scripts/commit-lint.config.js
        fi

    - name: Validate current commit
      if: always()
      shell: bash
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: |
        echo "Validating current commit message..."
        export LANG=en_US.UTF-8
        export LC_ALL=en_US.UTF-8
        git log -1 --pretty=format:"%s" | npx commitlint --verbose --config scripts/commit-lint.config.js

    - name: Check emoji format
      shell: bash
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: |
        echo "Checking emoji format in commit messages..."
        # 设置UTF-8编码
        export LANG=en_US.UTF-8
        export LC_ALL=en_US.UTF-8
        
        # 检查commit消息是否符合emoji格式
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          COMMITS=$(git log --format="%s" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
        else
          COMMITS=$(git log -1 --pretty=format:"%s")
        fi
        
        # 定义支持的emoji字符
        SUPPORTED_EMOJIS="✨🔧📝🎨☢️🧪🔨⚡️🚀🔖🚦📦⏪💡🧨✅🔀🔮"
        
        echo "$COMMITS" | while IFS= read -r message; do
          if [ -n "$message" ]; then
            # 获取消息的第一个字符
            FIRST_CHAR=$(echo "$message" | cut -c1-3)
            # 检查是否以支持的emoji开头
            if [[ ! "$SUPPORTED_EMOJIS" == *"$FIRST_CHAR"* ]]; then
              echo "❌ 错误: commit消息必须以支持的emoji开头"
              echo "当前消息: $message"
              echo "第一个字符: $FIRST_CHAR"
              echo "支持的emoji类型:"
              echo "  ✨ feat: 新功能"
              echo "  🔧 fix: 修复bug"
              echo "  📝 docs: 文档更新"
              echo "  🎨 style: 代码格式调整"
              echo "  ☢️ refactor: 重构代码"
              echo "  🧪 test: 测试相关"
              echo "  🔨 config: 配置文件修改"
              echo "  ⚡️ perf: 性能优化"
              echo "  🚀 release: 发布版本"
              echo "  🔖 tag: 标签相关"
              echo "  🚦 ci: CI/CD相关"
              echo "  📦 build: 构建相关"
              echo "  ⏪ revert: 回滚操作"
              echo "  💡 idea: 新想法"
              echo "  🧨 delete: 删除文件"
              echo "  ✅ complete: 完成任务"
              echo "  🔀 branch: 分支操作"
              echo "  🔮 experiment: 实验性功能"
              exit 1
            fi
          fi
        done
        echo "✅ commit消息格式正确"