# 日志工具模块
# 提供统一的日志记录功能

namespace utils::logger;

# 全局日志级别
let logLevel = "INFO";

# 基本日志函数
micro log(message) {
    let timestamp = getCurrentTimestamp();
    let formattedMessage = "[" + timestamp + "] " + logLevel + ": " + message;
    console.log(formattedMessage);
}

# 错误日志
micro logError(message) {
    let timestamp = getCurrentTimestamp();
    let formattedMessage = "[" + timestamp + "] ERROR: " + message;
    console.error(formattedMessage);
}

# 警告日志
micro logWarning(message) {
    let timestamp = getCurrentTimestamp();
    let formattedMessage = "[" + timestamp + "] WARNING: " + message;
    console.warn(formattedMessage);
}

# 调试日志
micro logDebug(message) {
    if logLevel == "DEBUG" {
        let timestamp = getCurrentTimestamp();
        let formattedMessage = "[" + timestamp + "] DEBUG: " + message;
        console.log(formattedMessage);
    }
}

# 设置日志级别
micro setLogLevel(level) {
    logLevel = level;
    log("Log level set to: " + level);
}

# 获取当前时间戳（简化版）
micro getCurrentTimestamp() {
    # 在实际实现中，这里应该返回真实的时间戳
    # 为了测试目的，我们返回一个固定的格式
    return "2024-01-01 12:00:00";
}

# 日志统计
let logCount = 0;

micro incrementLogCount() {
    logCount = logCount + 1;
}

micro getLogCount() {
    return logCount;
}