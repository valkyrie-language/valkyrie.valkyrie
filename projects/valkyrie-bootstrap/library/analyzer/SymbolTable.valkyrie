namespace package::analyzer;

using package::analyzer::Symbol;

⍝ 符号表类，用于管理程序中的所有符号
class SymbolTable {
    ⍝ 存储符号的映射，键为符号的完全限定名字符串，值为 Symbol 实例
    symbols: Map<String, Symbol>;

    constructor() {
        self.symbols = {};
    }

    ⍝ 添加一个符号到符号表
    micro add_symbol(self, symbol: Symbol) {
        let fqn = symbol.get_fqn();
        if self.symbols[fqn] {
            ⍝ 可以在这里添加错误处理，例如符号重定义错误
            console.log("Error: Symbol '" + fqn + "' already defined.");
        }
        self.symbols[fqn] = symbol;
    }

    ⍝ 根据完全限定名查找符号
    micro lookup_symbol(self, fqn: String) -> Symbol {
        return self.symbols[fqn];
    }

    ⍝ 检查符号是否存在
    micro has_symbol(self, fqn: String) -> Boolean {
        return self.symbols[fqn] != undefined;
    }
}