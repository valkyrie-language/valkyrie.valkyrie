namespace package::parser;


class ValkyrieParser {
    constructor(tokens) {
        self.tokens = tokens;
        self.position = 0;
        self.current_token = tokens[0];
    }

    micro advance(self) {
        self.position = self.position + 1;
        if self.position < self.tokens.length {
            self.current_token = self.tokens[self.position];
        }
        else {
            self.current_token = {};
            self.current_token.type = "EOF";
        }
    }
    
    micro expect(self, tokenType) {
        if self.current_token.type != tokenType {
            let error = {};
            error.type = "ParseError";
            error.message = "Expected " + tokenType + " but got " + self.current_token.type;
            error.line = self.current_token.line;
            error.column = self.current_token.column;
            return error;
        }
        let token = self.current_token;
        self.advance();
        return token;
    }
}