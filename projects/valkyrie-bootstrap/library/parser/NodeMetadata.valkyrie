namespace package::parser;

using package::parser::Node;

# NodeMetadata 存储节点的元数据信息
# 这样可以保持 Node 的不可变性，同时提供必要的解析信息
class NodeMetadata {
    constructor() {
        # 节点到名称的映射
        self.node_names = {};
        
        # 节点到值的映射
        self.node_values = {};
        
        # 节点到其他属性的映射
        self.node_properties = {};
    }
    
    # 设置节点的名称
    micro set_node_name(self, node: Node, name: String) {
        let node_id = self.get_node_id(node);
        self.node_names[node_id] = name;
    }
    
    # 获取节点的名称
    micro get_node_name(self, node: Node) -> String {
        let node_id = self.get_node_id(node);
        if self.node_names[node_id] {
            return self.node_names[node_id];
        }
        return false;
    }
    
    # 设置节点的值
    micro set_node_value(self, node: Node, value: String) {
        let node_id = self.get_node_id(node);
        self.node_values[node_id] = value;
    }
    
    # 获取节点的值
    micro get_node_value(self, node: Node) -> String {
        let node_id = self.get_node_id(node);
        if self.node_values[node_id] {
            return self.node_values[node_id];
        }
        return false;
    }
    
    # 设置节点的属性
    micro set_node_property(self, node: Node, key: String, value: String) {
        let node_id = self.get_node_id(node);
        if !self.node_properties[node_id] {
            self.node_properties[node_id] = {};
        }
        self.node_properties[node_id][key] = value;
    }
    
    # 获取节点的属性
    micro get_node_property(self, node: Node, key: String) -> String {
        let node_id = self.get_node_id(node);
        if self.node_properties[node_id] && self.node_properties[node_id][key] {
            return self.node_properties[node_id][key];
        }
        return false;
    }
    
    # 生成节点的唯一标识符
    micro get_node_id(self, node: Node) -> String {
        # 使用节点的位置信息作为唯一标识符
        return node.type + "_" + node.offset + "_" + node.length + "_" + node.line + "_" + node.column;
    }
    
    # 清空所有元数据
    micro clear(self) {
        self.node_names = {};
        self.node_values = {};
        self.node_properties = {};
    }
}